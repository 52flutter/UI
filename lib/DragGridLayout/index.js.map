{"version":3,"sources":["../../src/components/DragGridLayout/index.js"],"names":["ResponsiveReactGridLayout","layoutGrid","lg","md","sm","xs","xxs","DragGridLayout","componentWillMount","staticItem","layoutsCard","props","name","static","push","setState","cardArr","items","layouts","layoutsSort","componentWillReceiveProps","nextProps","layout","state","containerWidth","sortFunction","obj1","obj2","y","x","getSort","arr","layoutNew","sort","k","length","layoutsSortCoreAlgorithm","currnetX","currentY","nextWidth","grid","positionCard","widthSum","i","w","layoutGridBreakpoin","breakpoin","arrBreakpoin","j","undefined","cardPosition","cols","h","lgArr","mdArr","smArr","xsArr","xxsArr","layoutsNew","onDragStop","oldItem","newItem","placeholder","e","element","dragCallback","onBreakpointChange","newBreakpoint","newCols","onLayoutChange","render","ems","children","map","itm","ind","indexOf","key","height","style","rowHeight","itmNew","position","breakpoints","margin","Component","defaultProps","propTypes","number","shape","arrayOf","object","isRequired","array","func"],"mappings":"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","file":"index.js","sourcesContent":["/**\r\n * Created by yin on 2017/10/11.\r\n */\r\nimport React from 'react';\r\nimport {Card} from \"antd\";\r\nimport ReactGridLayout from 'react-grid-layout';\r\nimport {Responsive, WidthProvider} from 'react-grid-layout';\r\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\r\nimport PropTypes from 'prop-types';\r\n//import reactDocs  from 'react-docgen';\r\nconst layoutGrid= {\r\n  lg: 4, md: 3, sm: 2, xs: 2, xxs: 2\r\n}\r\nclass DragGridLayout extends React.Component {\r\n\r\n\r\n  componentWillMount=()=>{\r\n    let staticItem = []\r\n    let layoutsCard = this.props.layoutsCard\r\n    for (let name in layoutsCard) {\r\n      if (layoutsCard[name].static) {\r\n        staticItem.push(name)\r\n      }\r\n    }\r\n    this.setState({\r\n      cardArr: this.props.items,\r\n      layouts: this.layoutsSort(this.props.items),\r\n      staticItem: staticItem  // 该字段用于标识那些是可以拖动的\r\n    });\r\n  }\r\n  componentWillReceiveProps=(nextProps)=> {\r\n    if (nextProps.items !== this.props.items) {\r\n      let layouts = this.layoutsSort(nextProps.items)\r\n      this.setState({cardArr: nextProps.items,layouts: layouts,layout: layouts[this.state.containerWidth]});\r\n    }\r\n    if (nextProps.layoutsCard !== this.props.layoutsCard) {\r\n      let staticItem = []\r\n      let layoutsCard = nextProps.layoutsCard\r\n      for (let name in layoutsCard) {\r\n        if (layoutsCard[name].static) {\r\n          staticItem.push(name)\r\n        }\r\n      }\r\n      this.setState({\r\n        staticItem: staticItem  // 该字段用于标识那些是可以拖动的\r\n      });\r\n    }\r\n  }\r\n  sortFunction =(obj1, obj2)=> {\r\n    if (obj1.y < obj2.y) {\r\n      return -1;\r\n    } else if (obj1.y > obj2.y) {\r\n      return 1;\r\n    } else {\r\n      if (obj1.x < obj2.x) {\r\n        return -1;\r\n      } else if (obj1.x > obj2.x) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n  }\r\n  getSort=(layout)=> {\r\n    let arr = []\r\n    let layoutNew = layout.sort(this.sortFunction)\r\n    for (let k=0;k<layoutNew.length;k++) {\r\n      arr.push(layoutNew[k]['i'])\r\n    }\r\n    return arr\r\n  }\r\n  layoutsSortCoreAlgorithm=(arr,currnetX,currentY,nextWidth,grid)=> {\r\n    let positionCard = {x:currnetX,y:currentY}\r\n    if (arr.length>0) {\r\n      // 1.将所有同一行的全部筛选出来\r\n      var widthSum = 0\r\n      //var gridCurrentX = 0\r\n      for (let i=0;i<arr.length;i++) {\r\n        if (arr[i].y === currentY) {\r\n          widthSum = widthSum+arr[i].w\r\n        }\r\n      }\r\n      if (widthSum+nextWidth >grid) {\r\n        // 换行\r\n        positionCard = {x:0,y:currentY+1}\r\n      } else {\r\n        // 不换行\r\n        positionCard = {x:widthSum,y:currentY}\r\n      }\r\n    }\r\n    return positionCard\r\n  }\r\n  layoutGridBreakpoin=(breakpoin,arr)=> {\r\n    let arrBreakpoin = []\r\n    let currnetX = 0\r\n    let currentY = 0\r\n    for (let j=0;j<arr.length;j++){\r\n      if (this.props.layoutsCard[arr[j]] !== undefined ) {\r\n        let nextWidth = this.props.layoutsCard[arr[j]][breakpoin]\r\n        let cardPosition = this.layoutsSortCoreAlgorithm(arrBreakpoin,currnetX,currentY,nextWidth,this.props.cols[breakpoin])\r\n        currnetX = cardPosition.x\r\n        currentY = cardPosition.y\r\n        arrBreakpoin.push({i: arr[j],w: nextWidth,h: this.props.layoutsCard[arr[j]].h || 1,x:cardPosition.x,y:cardPosition.y,static: this.props.layoutsCard[arr[j]].static || false})\r\n        //arrBreakpoin.push({...this.props.layoutsCard[arr[j]],w: nextWidth,x:cardPosition.x,y:cardPosition.y})\r\n      }\r\n    }\r\n    return arrBreakpoin\r\n  }\r\n  layoutsSort=(arr)=> {\r\n    // 这里根据card的排序重新组装layouts\r\n    let lgArr = this.layoutGridBreakpoin('lg',arr)\r\n    let mdArr = this.layoutGridBreakpoin('md',arr)\r\n    let smArr = this.layoutGridBreakpoin('sm',arr)\r\n    let xsArr = this.layoutGridBreakpoin('xs',arr)\r\n    let xxsArr = this.layoutGridBreakpoin('xxs',arr)\r\n    let layoutsNew = { lg:lgArr,md:mdArr,sm:smArr,xs:xsArr,xxs:xxsArr }\r\n    return  layoutsNew\r\n  }\r\n  onDragStop=(layout ,oldItem, newItem,placeholder, e, element)=> {\r\n    let cardArr = this.getSort(layout)\r\n    this.props.dragCallback(cardArr)\r\n  }\r\n  onBreakpointChange=(newBreakpoint, newCols)=> {\r\n    this.setState({containerWidth: newBreakpoint});\r\n  }\r\n  onLayoutChange=(layout, layouts)=> {\r\n\r\n  }\r\n  render = () => {\r\n    let ems = []\r\n    this.props.children.map((itm, ind) => {\r\n      if (itm !== null && this.state.cardArr.indexOf(itm.key) >-1){\r\n        let height\r\n        if (itm.props.style && itm.props.style.height) {\r\n          height = itm.props.style.height\r\n        } else {\r\n          height = this.props.rowHeight\r\n        }\r\n        let itmNew = {...itm,props: {...itm.props,style: {...itm.props.style,height: height}}}\r\n        ems.push(itmNew)\r\n      }\r\n    })\r\n    return (\r\n      <div className=\"drag-grid-layout\" style={{position: 'relative'}}>\r\n        <ResponsiveReactGridLayout layouts={this.state.layouts}\r\n                                   cols={this.props.cols}\r\n                                   verticalCompact={false}\r\n                                   onDragStop={this.onDragStop}  layout={this.state.layout}\r\n                                   breakpoints={this.props.breakpoints} onBreakpointChange={this.onBreakpointChange}\r\n                                   rowHeight={this.props.rowHeight} onLayoutChange={this.onLayoutChange} margin={this.props.margin}>\r\n          {(ems.map((itm, ind) => {\r\n              return (\r\n                <div className={this.state.staticItem.indexOf(itm.key) === -1 ? 'move' : ''} key={itm.key}>{itm}</div>\r\n              )\r\n            })\r\n          )}\r\n        </ResponsiveReactGridLayout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDragGridLayout.defaultProps = {\r\n  rowHeight: 320,\r\n  cols: {\r\n    lg: 4,\r\n    md: 3,\r\n    sm: 2,\r\n    xs: 2,\r\n    xxs: 2\r\n  },\r\n  breakpoints: {\r\n    lg: 1600,\r\n    md: 1200,\r\n    sm: 992,\r\n    xs: 768,\r\n    xxs: 0\r\n  },\r\n  margin: [20,20],\r\n};\r\n\r\nDragGridLayout.propTypes = {\r\n  /**\r\n   * 可选\r\n   *\r\n   * 每个可拖曳区域高度\r\n   */\r\n  rowHeight: PropTypes.number,\r\n  /**\r\n   * 可选\r\n   *\r\n   * 设置不同的栅格时，每行被划分为几个\r\n   */\r\n  cols: PropTypes.shape({\r\n    lg: PropTypes.number,\r\n    md: PropTypes.number,\r\n    sm: PropTypes.number,\r\n    xs: PropTypes.number,\r\n    xxs: PropTypes.number\r\n  }),\r\n  /**\r\n   * 可选\r\n   *\r\n   * 响应式栅格的断点(设置不同的栅格对应的像素)\r\n   */\r\n  breakpoints: PropTypes.shape({\r\n    lg: PropTypes.number,\r\n    md: PropTypes.number,\r\n    sm: PropTypes.number,\r\n    xs: PropTypes.number,\r\n    xxs: PropTypes.number\r\n  }),\r\n  /**\r\n   * 可选\r\n   *\r\n   * 每个可拖曳区域元素的margin布局\r\n   */\r\n  margin: PropTypes.arrayOf(PropTypes.number),\r\n  /**\r\n   * 可选\r\n   *\r\n   * 每个可拖曳区域高度\r\n   */\r\n  layoutsCard: PropTypes.object.isRequired,\r\n  /**\r\n   * 可选\r\n   *\r\n   * 每个可拖曳区域高度\r\n   */\r\n  items: PropTypes.array.isRequired,\r\n  /**\r\n   * 可选\r\n   *\r\n   * 拖曳某个元素后的回调函数\r\n   */\r\n  dragCallback: PropTypes.func\r\n};\r\n\r\nexport default DragGridLayout;\r\n"]}