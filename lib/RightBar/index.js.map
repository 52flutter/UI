{"version":3,"sources":["../../src/components/RightBar/index.js"],"names":["RightBar","render","that","props","children","map","itm","ind","key","float","leftSize","leftIsVisible","rightIsVisible","rightSize","rightOnSizeChange","Component","defaultProps","propTypes","bool","number","func"],"mappings":";;;;;;;AAGA;;;;AACA;;AACA;;;;;;;;;;+eALA;;;;;IAOaA,Q,WAAAA,Q;;;;;;;;;;;;;;0LAEXC,M,GAAS,YAAM;AACb,UAAIC,YAAJ;AACA,aACE;AAAA;AAAA;AACI,cAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpC,cAAID,IAAIE,GAAJ,KAAY,MAAhB,EAAwB;AACtB,mBAAS;AAAA;AAAA,gBAAO,KAAKD,GAAZ,EAAiB,WAAW,EAACE,OAAO,MAAR,EAA5B,EAA6C,SAAQ,MAArD,EAA4D,UAAS,MAArE,EAA4E,MAAM,MAAKN,KAAL,CAAWO,QAA7F,EAAuG,WAAW,MAAKP,KAAL,CAAWQ,aAA7H;AACJL;AADI,aAAT;AAGD,WAJD,MAIO,IAAIA,IAAIE,GAAJ,KAAY,OAAhB,EAAyB;AAC9B,mBAAON,KAAKC,KAAL,CAAWS,cAAX,GAA8B;AAAA;AAAA,gBAAM,KAAKL,GAAX,EAAgB,SAAQ,MAAxB,EAA+B,UAAU,OAAzC;AAC9B,2BAAW,EAACE,OAAO,OAAR,EADmB,EACD,MAAM,MAAKN,KAAL,CAAWU,SADhB,EAC2B,WAAW,MAAKV,KAAL,CAAWS,cADjD,EACiE,cAAc,MAAKT,KAAL,CAAWW,iBAD1F;AAElCR;AAFkC,aAA9B,GAGI,EAHX;AAID;AACF,SAXD;AADJ,OADF;AAiBD,K;;;;EArB2B,gBAAMS,S;;AAuBpCf,SAASgB,YAAT,GAAwB;AACtBL,iBAAe,IADO;AAEtBD,YAAU;AAFY,CAAxB;AAIAV,SAASiB,SAAT,GAAqB;AACnB;;;;;AAKAN,iBAAe,iBAAUO,IANN;AAOnB;;;;;AAKAR,YAAU,iBAAUS,MAZD;AAanB;;;;;AAKAP,kBAAgB,iBAAUM,IAlBP;AAmBnB;;;;;AAKAL,aAAW,iBAAUM,MAxBF;AAyBnB;;;;;AAKAL,qBAAkB,iBAAUM;AA9BT,CAArB;;kBAiCe,oBAAUpB,QAAV,C","file":"index.js","sourcesContent":["/**\r\n * Created by yin on 2018/1/10.\r\n */\r\nimport React, { PropTypes } from 'react';\r\nimport { connect } from 'dva';\r\nimport Dock from 'react-dock';\r\n\r\nexport class RightBar extends React.Component {\r\n\r\n  render = () => {\r\n    let that = this\r\n    return (\r\n      <div>\r\n        {(this.props.children.map((itm, ind) => {\r\n            if (itm.key === 'left') {\r\n              return ( <Dock  key={ind} dockStyle={{float: 'left'}} dimMode=\"none\" position='left' size={this.props.leftSize} isVisible={this.props.leftIsVisible}>\r\n                  {itm}\r\n              </Dock>)\r\n            } else if (itm.key === 'right') {\r\n              return that.props.rightIsVisible ? ( <Dock key={ind} dimMode=\"none\" position={'right'}\r\n                     dockStyle={{float: 'right'}} size={this.props.rightSize} isVisible={this.props.rightIsVisible} onSizeChange={this.props.rightOnSizeChange}>\r\n                {itm}\r\n              </Dock>) : ''\r\n            }\r\n          })\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nRightBar.defaultProps = {\r\n  leftIsVisible: true,\r\n  leftSize: 1,\r\n}\r\nRightBar.propTypes = {\r\n  /**\r\n   * 可选\r\n   *\r\n   * 左侧区域是否显示\r\n   */\r\n  leftIsVisible: PropTypes.bool,\r\n  /**\r\n   * 可选\r\n   *\r\n   * 左侧区域占屏幕的百分比\r\n   */\r\n  leftSize: PropTypes.number,\r\n  /**\r\n   * 可选\r\n   *\r\n   * 右侧区域是否显示\r\n   */\r\n  rightIsVisible: PropTypes.bool,\r\n  /**\r\n   * 可选\r\n   *\r\n   * 右侧区域占屏幕的百分比\r\n   */\r\n  rightSize: PropTypes.number,\r\n  /**\r\n   * 可选\r\n   *\r\n   * 右侧区域拖动改变左右两侧的大小占比\r\n   */\r\n  rightOnSizeChange:PropTypes.func\r\n};\r\n\r\nexport default connect()(RightBar);\r\n"]}